# Generated by Django 3.0.3 on 2020-03-03 18:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('components', '0002_auto_20200303_2121'),
        ('library', '0002_media_publisher'),
        ('publishers', '0003_auto_20200303_2121'),
        ('educategories', '0001_initial'),
        ('curricula', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('tests', '0002_auto_20200303_2121'),
    ]

    operations = [
        migrations.AddField(
            model_name='learningtestunique',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='learning_test_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learningtest',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='learningtest',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tests.Test'),
        ),
        migrations.AddField(
            model_name='learningsubject',
            name='unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subjects', related_query_name='subject', to='curricula.LearningUnit'),
        ),
        migrations.AddField(
            model_name='learninglesson',
            name='edu_category',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lesson_edu_category', to='educategories.EduCategory'),
        ),
        migrations.AddField(
            model_name='learninglecturevideo',
            name='media',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.Media'),
        ),
        migrations.AddField(
            model_name='learninglecturestat',
            name='lecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_stat', to='curricula.LearningLecture'),
        ),
        migrations.AddField(
            model_name='learninglecturestat',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_stat_user', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='learninglecturelivescribe',
            name='media',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='library.Media'),
        ),
        migrations.AddField(
            model_name='learninglecture',
            name='component',
            field=models.ManyToManyField(related_name='lecture_component', to='components.Component'),
        ),
        migrations.AddField(
            model_name='learninglecture',
            name='content_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType'),
        ),
        migrations.AddField(
            model_name='learninglecture',
            name='practice',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tests.Test'),
        ),
        migrations.AddField(
            model_name='learninglecture',
            name='publisher',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_publisher', to='publishers.Publisher'),
        ),
        migrations.AddField(
            model_name='learninglecture',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_parent', to='curricula.LearningSubject'),
        ),
        migrations.AddField(
            model_name='learninglecture',
            name='tag',
            field=models.ManyToManyField(related_name='lecture_tag', to='curricula.LearningTag'),
        ),
    ]
